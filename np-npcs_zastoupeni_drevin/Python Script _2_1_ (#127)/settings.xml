<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="sourceCode" type="xstring" value="import pandas as pd%%00010import re%%00010%%00010tb = {%%00010%%00009'rok' : [],%%00010%%00009'kategorie': [],%%00010%%00009'typ_porostu': [],%%00010%%00009'drevina': [],%%00010%%00009'hodnota': []%%00010%%00009}%%00010%%00010dreviny = pd.Index([drevina for drevina in input_table_2['DŘEVINA']])%%00010#print(dreviny)%%00010%%00010#prvni dva radky kategorie a rok, vynechat%%00010for i in range(2, input_table_1.shape[0]):%%00010%%00009for col, val in input_table_1.items():%%00009%%00010%%00009%%00009if col != 'Col0':%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009# rok je prvni z trvani LHP (lesni hosp. plan) - zjevne z poznamky%%00010%%00009%%00009%%00009# pokud je radek None, tak rok dle zpravy - prirozene a cilove zastoupeni%%00010%%00009%%00009%%00009if input_table_1[col][1] is not None:%%00010%%00009%%00009%%00009%%00009roky = input_table_1[col][1].strip(&quot;LHP&quot;).strip()%%00010%%00009%%00009%%00009%%00009rok = int(float(re.match('^[0-9]{4}', roky)[0]))%%00010%%00009%%00009%%00009else:%%00010%%00009%%00009%%00009%%00009rok = flow_variables['rok']%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009tb['rok'].append(rok)%%00010%%00010%%00009%%00009%%00009drevina = input_table_1['Col0'][i].strip().capitalize()%%00010%%00009%%00009%%00009print(drevina)%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009#hleda presny vyraz v ciselniku%%00010%%00009%%00009%%00009if drevina in dreviny:%%00010%%00009%%00009%%00009%%00009d_index = dreviny.get_loc(drevina)%%00010%%00009%%00009%%00009%%00009drevina = input_table_2['DŘEVINA'][d_index]%%00010%%00009%%00009%%00009%%00009porost = input_table_2['TYP POROSTU'][d_index]%%00010%%00009%%00009%%00009else:%%00010%%00009%%00009%%00009%%00009raise Exception(&quot;DREVINA {d} NENALEZENA&quot;.format(d=drevina))%%00010%%00010%%00009%%00009%%00009print(porost)%%00010%%00009%%00009%%00009tb['kategorie'].append(input_table_1[col][0].strip())%%00010%%00009%%00009%%00009tb['typ_porostu'].append(porost)%%00010%%00009%%00009%%00009tb['drevina'].append(drevina)%%00010%%00009%%00009%%00009hodnota = None if input_table_1[col][i] in [None, 'x', '-'] else float(input_table_1[col][i])%%00010%%00009%%00009%%00009tb['hodnota'].append(hodnota)%%00010%%00009%%00009%%00009%%00010output_table = pd.DataFrame(tb)"/>
<entry key="rowLimit" type="xint" value="1000"/>
<entry key="pythonVersionOption" type="xstring" value="python3"/>
<entry key="python2Command" type="xstring" value=""/>
<entry key="python3Command" type="xstring" value=""/>
<entry key="chunkSize" type="xint" value="500000"/>
<entry key="convertMissingToPython" type="xboolean" value="false"/>
<entry key="convertMissingFromPython" type="xboolean" value="false"/>
<entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
<entry key="sentinelValue" type="xint" value="0"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="EXECUTED"/>
<entry key="factory" type="xstring" value="org.knime.python2.nodes.script2in1out.Python2Script2In1OutNodeFactory"/>
<entry key="node-name" type="xstring" value="Python Script (2⇒1)"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="4.2.0.v202006261130"/>
<entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="4.2.0.v202007071503"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Python Script (2⇒1)"/>
<entry key="hasContent" type="xboolean" value="true"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_spec_class" type="xstring" value="org.knime.core.data.DataTableSpec"/>
<entry key="port_object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
<entry key="port_object_summary" type="xstring" value="Rows: 195, Cols: 5"/>
<entry key="port_dir_location" type="xstring" value="port_1"/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" value="64c124ab-42d6-44f6-8ccf-cbda885a056d"/>
</config>
</config>
