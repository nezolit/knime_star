<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="sourceCode" type="xstring" value="import pandas as pd%%00010import re, warnings%%00010%%00010tb = {%%00010%%00009'rok' : [],%%00010%%00009'kategorie': [],%%00010%%00009'kod_kategorie': [],%%00010%%00009'druh_paliva' : [],%%00010%%00009'hodnota': [],%%00010%%00009'jednotka' : [],%%00010%%00009'lokace': [],%%00010%%00009'zdroj' : []%%00010%%00009}%%00010%%00010for col in input_table_1.columns:%%00009%%00009%%00010%%00009for i in range(1, input_table_1.shape[0]):%%00010%%00009%%00009if col not in ['Col0', 'Col5']:%%00010%%00009%%00009%%00009#jenom GHP%%00010%%00009%%00009%%00009#if input_table_2['kod_kategorie'][i-1] == &quot;GHP&quot;:%%00010%%00009%%00009%%00009if input_table_1['Col0'][i] == input_table_2['kategorie'][i-1]:%%00010%%00009%%00009%%00009%%00009tb['kategorie'].append(input_table_1['Col0'][i])%%00010%%00009%%00009%%00009%%00009tb['kod_kategorie'].append(input_table_2['kod_kategorie'][i-1])%%00010%%00009%%00009%%00009else:%%00010%%00009%%00009%%00009%%00009warnings.simplefilter(&quot;error&quot;)%%00010%%00009%%00009%%00009%%00009warnings.warn(&quot;VALIDATION ERROR! Kategorie z validace se lisi od excelove. \n&quot;+input_table_1['Col0'][i]+ &quot; =! &quot; + input_table_2['kategorie'][i-1])%%00010%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009tb['rok'].append(flow_variables['Col4'])%%00010%%00009%%00009%%00009tb['lokace'].append('Česká republika')%%00010%%00009%%00009%%00009tb['druh_paliva'].append(input_table_1[col][0])%%00010%%00009%%00009%%00009hodnota = None if any(char.isdigit() for char in input_table_1[col][i]) is not True else float(input_table_1[col][i].replace(&quot;,&quot;, &quot;&quot;).replace(&quot; &quot;, &quot;&quot;))%%00010%%00009%%00009%%00009tb['hodnota'].append(hodnota)%%00010%%00009%%00009%%00009tb['jednotka'].append(flow_variables['Col3'])%%00010%%00009%%00009%%00009tb['zdroj'].append(flow_variables['zdroj'])%%00010%%00009%%00009%%00009%%00010#print(tb)%%00010%%00010output_table = pd.DataFrame(tb)"/>
<entry key="rowLimit" type="xint" value="1000"/>
<entry key="pythonVersionOption" type="xstring" value="python3"/>
<entry key="python2Command" type="xstring" value=""/>
<entry key="python3Command" type="xstring" value=""/>
<entry key="chunkSize" type="xint" value="500000"/>
<entry key="convertMissingToPython" type="xboolean" value="false"/>
<entry key="convertMissingFromPython" type="xboolean" value="false"/>
<entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
<entry key="sentinelValue" type="xint" value="0"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="IDLE"/>
<entry key="factory" type="xstring" value="org.knime.python2.nodes.script2in1out.Python2Script2In1OutNodeFactory"/>
<entry key="node-name" type="xstring" value="Python Script (2⇒1)"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="4.1.3.v202005112253"/>
<entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="4.1.3.v202005112253"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Python Script (2⇒1)"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
